import { useState } from 'react'

const App = () => {
  const [persons, setPersons] = useState([
    { name: 'Arto Hellas', number: '040-123456', id: 1 },
    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },
    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },
    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }
  ])
  const [newName, setNewName] = useState('')
  const [newNumber, setNewNumber] = useState('')
  const [filter, setFilter] = useState('')
  const [filteredPerson, setFilteredPerson] = useState({})

  const handleNewPerson = (event) => (
    setNewName(event.target.value)
  )

  const handleNewNumber = (event) => (
    setNewNumber(event.target.value)
  )

  const submitNewPerson = (event) => {
    event.preventDefault();
    const newPerson = { name: newName, number: newNumber };
    const check = persons.map((person) => {
      if (person.name === newPerson.name || person.number === newPerson.number) {
        return true
      }
      else { return false }
    })
    if (check.includes(true)) {
      alert(` ${newPerson.name} or ${newPerson.number} + is already added to phonebook`)
    } else {
      setPersons(persons.concat(newPerson));
    }
  }

  const handleNameFilter = (event) => {

    setFilter(event.target.value)
    if (event.target.value.length === 0) {
      setFilteredPerson({});
      setFilter("");
    } else {
      const filterdValueByName = persons.filter(person => {
        if (person.name.includes(event.target.value)) {
          console.log('name', person.name, event.target.value)
          setFilteredPerson(person);
          console.log('FilteredPerson', person, filteredPerson);
        }
      })
    }


  }

  if (Object.keys(filteredPerson).length !== 0) {
    return (
      <div>
        <h2>Phonebook</h2>
        <form onSubmit={submitNewPerson}>

          <div>
            filter shown with: <input onChange={handleNameFilter} value={filter} />
          </div>

          <h1>add a new</h1>

          <div>
            name: <input onChange={handleNewPerson} value={newName} />
          </div>

          <div>
            number: <input onChange={handleNewNumber} value={newNumber} />
          </div>

          <div>
            <button type="submit">add</button>
          </div>
        </form>
        <h2>Numbers</h2>
        {filteredPerson.name} {filteredPerson.number}
      </div>
    )

  } else {
    return (
      <div>
        <h2>Phonebook</h2>
        <form onSubmit={submitNewPerson}>
          <div>
            filter shown with: <input onChange={handleNameFilter} value={filter} />
          </div>

          <div>
            name: <input onChange={handleNewPerson} value={newName} />
          </div>
          <div>
            number: <input onChange={handleNewNumber} value={newNumber} />
          </div>

          <div>
            <button type="submit">add</button>
          </div>
        </form>
        <h2>Numbers</h2>
        <div>  {persons.map((name => <p key={name.id}>{name.name} {name.number}</p>))}</div>
      </div>
    )
  }
}

export default App
