import { useState } from 'react'
import axios from 'axios'

const Filter = (props) => (
  <div>
    filter by name: <input onChange={props.onChange} />
  </div>
)

const PersonForm = (props) => (
  <>
    <div>
      name: <input onChange={props.onChangeName} />
    </div>

    <div>
      number: <input onChange={props.onChangeNumber} />
    </div>

    <div>
      <button type="submit">add</button>
    </div>
  </>
)

const Persons = ({ persons }) => (

  <div>
    {persons.map((name => <p key={name.id}>{name.name} {name.number}</p>))}
  </div>

)
const App = () => {

  const [persons, setPersons] = useState([
    { name: 'Arto Hellas', number: '040-123456', id: 1 },
    { name: 'Ada Lovelace', number: '39-44-5323523', id: 2 },
    { name: 'Dan Abramov', number: '12-43-234345', id: 3 },
    { name: 'Mary Poppendieck', number: '39-23-6423122', id: 4 }
  ])

  const [name, setNewName] = useState('')
  const [number, setNewNumber] = useState('')
  const [filter, setFilter] = useState('')
  const [filteredPerson, setFilteredPerson] = useState({})


  const handleNewPerson = (event) => (
    setNewName(event.target.value)
  )

  const handleNewNumber = (event) => (
    setNewNumber(event.target.value)
  )

  const submitNewPerson = (event) => {
    event.preventDefault();
    const newPerson = { name, number };

    const check = persons.map((person) => {
      if (person.name === newPerson.name || person.number === newPerson.number) {
        return true
      }
      else { return false }
    })
    if (check.includes(true)) {
      alert(` ${newPerson.name} or ${newPerson.number} + is already added to phonebook`)
    } else {
      setPersons(persons.concat(newPerson));
      axios.post('http://localhost:3001/persons', newPerson)
        .then(response => {
          console.log(response);
        })
    }


  }

  const handleNameFilter = (event) => {

    setFilter(event.target.value)
    if (event.target.value.length === 0) {
      setFilteredPerson({});
      setFilter("");
    } else {

      const filtereddValueByName = persons.filter(person => {
        return person.name.toLowerCase().trim() === filter.toLowerCase().trim()
      })
      setFilteredPerson(filtereddValueByName);


    }
  }

  if (Object.keys(filteredPerson).length !== 0) {
    return (
      <div>
        <h2>Phonebook</h2>
        <form onSubmit={submitNewPerson}>

          <Filter onChange={handleNameFilter} />

          <h3>add a new</h3>

          <PersonForm />

        </form>

        <h2>Numbers</h2>

        <Persons persons={filteredPerson} />

      </div>
    )

  } else {
    return (
      <div>
        <h2>Phonebook</h2>
        <form onSubmit={submitNewPerson}>

          <Filter onChange={handleNameFilter} />

          <h3>add a new</h3>

          <PersonForm onChangeName={handleNewPerson} onChangeNumber={handleNewNumber} />

        </form>

        <h2>Numbers</h2>
        <Persons persons={persons} />
      </div>
    )
  }
}

export default App
